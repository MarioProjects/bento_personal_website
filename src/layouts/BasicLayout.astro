---
interface Props {
  title: string;
  description: string;
  page?: "travel" | "blog";
  slug?: string | undefined;
  frontmatter?: {
    file: string;
    url: string | undefined;
  } & {
    title: string;
    description: string;
    pubDate: string;
    minutesRead: string;
  };
}

const { title, description, page, slug, frontmatter } = Astro.props;
const image = `${Astro.url.origin}/og-image-dark.png`;

const schema = {
  "@context": "http://schema.org",
  "@type": "Person",
  name: "Mario Parre√±o",
  url: "https://maparla.es",
  sameAs: [
    "https://www.linkedin.com/in/mario-parre%C3%B1o-lara-a33585125/",
    "https://github.com/MarioProjects",
  ],
  image: "https://maparla.es/og-image-dark.png",
  jobTitle: "Machine Learning Engineer",
  worksFor: {
    "@type": "Organization",
    name: "Self-Employed",
    address: {
      "@type": "PostalAddress",
      addressLocality: "Spain",
      addressCountry: "ES",
    },
  },
  nationality: {
    "@type": "Country",
    name: "Spain",
  },
};

import "../../src/styles/global.css";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="/favicon/sitemap-index.xml" />
    <!-- Basic OG tags for sharing your website's content on platforms like Facebook and LinkedIn -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.origin} />
    <meta
      property="og:image"
      content={image || "https://maparla.es/og-image-dark.png"}
    />
    <!-- Basic Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta
      name="twitter:image"
      content={image || "https://maparla.es/og-image-dark.png"}
    />

    <link rel="preconnect" href="https://cdn.fontshare.com" />
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  </head>
  <body
    class="bg-darkslate-700 md:h-screen flex flex-col justify-center items-center"
  >
    <slot name="loader" />
    <slot />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "CabinetGrotesk";
    src: url("/fonts/CabinetGrotesk-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }
  @font-face {
    font-family: "Satoshi";
    src: url("/fonts/Satoshi-Variable.ttf") format("truetype-variations");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
    font-weight: 100 1000;
  }

  body {
    margin: 0;
    font-family: "Satoshi", sans-serif;
    -webkit-font-smoothing: antialiased;
    background-color: rgba(var(--background)) !important;
    color: rgba(var(--texts)) !important;

    background-image: linear-gradient(
        rgba(116, 116, 116, 0.2) 1px,
        transparent 1px
      ),
      linear-gradient(
        to right,
        rgba(116, 116, 116, 0.2) 1px,
        rgba(var(--background)) 1px
      );
    background-size: 75px 75px;
    position: relative;
  }

  body::after {
    content: "";
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      var(--background-backdrop-init),
      var(--background-backdrop-end)
    );
    pointer-events: none; /* Ensure the gradient overlay does not interfere with other elements */
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: "Cabinet Grotesk", sans-serif;
  }
  p {
    font-family: "Satoshi";
  }

  b {
    font-weight: 700 !important;
  }
</style>
